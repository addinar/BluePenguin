# Generated by Django 5.1.2 on 2024-11-06 03:21

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.TextField(max_length=255)),
                ('city', models.TextField(max_length=255)),
                ('state', models.TextField(blank=True, choices=[('AL', 'Alabama'), ('AK', 'Alaska'), ('AZ', 'Arizona'), ('AR', 'Arkansas'), ('CA', 'California'), ('CO', 'Colorado'), ('CT', 'Connecticut'), ('DE', 'Delaware'), ('FL', 'Florida'), ('GA', 'Georgia'), ('HI', 'Hawaii'), ('ID', 'Idaho'), ('IL', 'Illinois'), ('IN', 'Indiana'), ('IA', 'Iowa'), ('KS', 'Kansas'), ('KY', 'Kentucky'), ('LA', 'Louisiana'), ('ME', 'Maine'), ('MD', 'Maryland'), ('MA', 'Massachusetts'), ('MI', 'Michigan'), ('MN', 'Minnesota'), ('MS', 'Mississippi'), ('MO', 'Missouri'), ('MT', 'Montana'), ('NE', 'Nebraska'), ('NV', 'Nevada'), ('NH', 'New Hampshire'), ('NJ', 'New Jersey'), ('NM', 'New Mexico'), ('NY', 'New York'), ('NC', 'North Carolina'), ('ND', 'North Dakota'), ('OH', 'Ohio'), ('OK', 'Oklahoma'), ('OR', 'Oregon'), ('PA', 'Pennsylvania'), ('RI', 'Rhode Island'), ('SC', 'South Carolina'), ('SD', 'South Dakota'), ('TN', 'Tennessee'), ('TX', 'Texas'), ('UT', 'Utah'), ('VT', 'Vermont'), ('VA', 'Virginia'), ('WA', 'Washington'), ('WV', 'West Virginia'), ('WI', 'Wisconsin'), ('WY', 'Wyoming')], max_length=255)),
                ('province_territory', models.TextField(blank=True, choices=[('AB', 'Alberta'), ('BC', 'British Columbia'), ('MB', 'Manitoba'), ('NB', 'New Brunswick'), ('NL', 'Newfoundland and Labrador'), ('NS', 'Nova Scotia'), ('ON', 'Ontario'), ('PE', 'Prince Edward Island'), ('QC', 'Quebec'), ('SK', 'Saskatchewan'), ('NT', 'Northwest Territories'), ('NU', 'Nunavut'), ('YT', 'Yukon')], max_length=255)),
                ('zip', models.PositiveIntegerField()),
                ('country', models.TextField(choices=[('United States', 'United States'), ('Canada', 'Canada'), ('Mexico', 'Mexico'), ('Bahamas', 'Bahamas'), ('Bermuda', 'Bermuda'), ('Puerto Rico', 'Puerto Rico'), ('Jamaica', 'Jamaica'), ('Dominican Republic', 'Dominican Republic'), ('Haiti', 'Haiti'), ('Trinidad and Tobago', 'Trinidad and Tobago'), ('Belize', 'Belize'), ('Costa Rica', 'Costa Rica'), ('El Salvador', 'El Salvador'), ('Guatemala', 'Guatemala'), ('Honduras', 'Honduras'), ('Nicaragua', 'Nicaragua'), ('Panama', 'Panama'), ('Argentina', 'Argentina'), ('Bolivia', 'Bolivia'), ('Brazil', 'Brazil'), ('Chile', 'Chile'), ('Colombia', 'Colombia'), ('Ecuador', 'Ecuador'), ('Guyana', 'Guyana'), ('Paraguay', 'Paraguay'), ('Peru', 'Peru'), ('Suriname', 'Suriname'), ('Uruguay', 'Uruguay'), ('Venezuela', 'Venezuela'), ('United Kingdom', 'United Kingdom'), ('Ireland', 'Ireland'), ('France', 'France'), ('Germany', 'Germany'), ('Italy', 'Italy'), ('Spain', 'Spain'), ('Portugal', 'Portugal'), ('Belgium', 'Belgium'), ('Netherlands', 'Netherlands'), ('Luxembourg', 'Luxembourg'), ('Switzerland', 'Switzerland'), ('Austria', 'Austria'), ('Sweden', 'Sweden'), ('Norway', 'Norway'), ('Denmark', 'Denmark'), ('Finland', 'Finland'), ('Iceland', 'Iceland'), ('Poland', 'Poland'), ('Czech Republic', 'Czech Republic'), ('Hungary', 'Hungary'), ('Romania', 'Romania'), ('Bulgaria', 'Bulgaria'), ('Greece', 'Greece'), ('Cyprus', 'Cyprus'), ('Malta', 'Malta'), ('Estonia', 'Estonia'), ('Latvia', 'Latvia'), ('Lithuania', 'Lithuania'), ('Slovakia', 'Slovakia'), ('Slovenia', 'Slovenia'), ('Croatia', 'Croatia'), ('Bosnia and Herzegovina', 'Bosnia and Herzegovina'), ('Serbia', 'Serbia'), ('Montenegro', 'Montenegro'), ('North Macedonia', 'North Macedonia'), ('Albania', 'Albania'), ('Kosovo', 'Kosovo'), ('Moldova', 'Moldova'), ('Ukraine', 'Ukraine'), ('Palestine', 'Palestine'), ('Turkey', 'Turkey'), ('Saudi Arabia', 'Saudi Arabia'), ('United Arab Emirates', 'United Arab Emirates'), ('Qatar', 'Qatar'), ('Kuwait', 'Kuwait'), ('Oman', 'Oman'), ('Bahrain', 'Bahrain'), ('Jordan', 'Jordan'), ('Lebanon', 'Lebanon'), ('Iraq', 'Iraq'), ('Yemen', 'Yemen'), ('South Africa', 'South Africa'), ('Egypt', 'Egypt'), ('Nigeria', 'Nigeria'), ('Kenya', 'Kenya'), ('Ghana', 'Ghana'), ('Uganda', 'Uganda'), ('Morocco', 'Morocco'), ('Algeria', 'Algeria'), ('Tunisia', 'Tunisia'), ('Ivory Coast', 'Ivory Coast'), ('Senegal', 'Senegal'), ('Ethiopia', 'Ethiopia'), ('Tanzania', 'Tanzania'), ('Zambia', 'Zambia'), ('Botswana', 'Botswana'), ('Namibia', 'Namibia'), ('Mozambique', 'Mozambique'), ('Zimbabwe', 'Zimbabwe'), ('Rwanda', 'Rwanda'), ('Angola', 'Angola'), ('China', 'China'), ('Japan', 'Japan'), ('South Korea', 'South Korea'), ('India', 'India'), ('Pakistan', 'Pakistan'), ('Bangladesh', 'Bangladesh'), ('Indonesia', 'Indonesia'), ('Malaysia', 'Malaysia'), ('Singapore', 'Singapore'), ('Thailand', 'Thailand'), ('Vietnam', 'Vietnam'), ('Philippines', 'Philippines'), ('Sri Lanka', 'Sri Lanka'), ('Nepal', 'Nepal'), ('Maldives', 'Maldives'), ('Bhutan', 'Bhutan'), ('Myanmar', 'Myanmar'), ('Cambodia', 'Cambodia'), ('Laos', 'Laos'), ('Brunei', 'Brunei'), ('East Timor', 'East Timor'), ('Kazakhstan', 'Kazakhstan'), ('Uzbekistan', 'Uzbekistan'), ('Turkmenistan', 'Turkmenistan'), ('Tajikistan', 'Tajikistan'), ('Kyrgyzstan', 'Kyrgyzstan'), ('Australia', 'Australia'), ('New Zealand', 'New Zealand'), ('Papua New Guinea', 'Papua New Guinea'), ('Fiji', 'Fiji'), ('Samoa', 'Samoa'), ('Tonga', 'Tonga'), ('Vanuatu', 'Vanuatu'), ('Solomon Islands', 'Solomon Islands'), ('Hong Kong', 'Hong Kong'), ('Macau', 'Macau'), ('Taiwan', 'Taiwan')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Bid',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bid_price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('time_of_bid', models.DateTimeField()),
                ('status', models.CharField(choices=[('1st', 'Highest Bid'), ('2nd', 'Second Highest Bid'), ('3rd', 'Third Highest Bid'), ('F', 'Not In the Top Three')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='CardDetails',
            fields=[
                ('card_number', models.PositiveIntegerField(primary_key=True, serialize=False, unique=True)),
                ('card_holder_name', models.TextField(max_length=100)),
                ('expire_month', models.PositiveIntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10), (11, 11), (12, 12)])),
                ('expire_year', models.PositiveIntegerField(choices=[(2024, 2024), (2025, 2025), (2026, 2026), (2027, 2027), (2028, 2028), (2029, 2029), (2030, 2030), (2031, 2031), (2032, 2032), (2033, 2033), (2034, 2034), (2035, 2035), (2036, 2036), (2037, 2037), (2038, 2038), (2039, 2039), (2040, 2040), (2041, 2041), (2042, 2042), (2043, 2043), (2044, 2044), (2045, 2045), (2046, 2046), (2047, 2047), (2048, 2048), (2049, 2049), (2050, 2050)])),
                ('cvv', models.PositiveIntegerField(unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='PayPalDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('paypal_email', models.EmailField(max_length=254, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(max_length=100)),
                ('image', models.URLField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(max_length=255)),
                ('selling_price', models.DecimalField(decimal_places=2, max_digits=6)),
                ('highest_bid', models.DecimalField(decimal_places=2, max_digits=6)),
                ('deadline', models.DateTimeField()),
                ('availability', models.CharField(choices=[('A', 'Available'), ('B', 'Bidded Off')], default='A', max_length=1)),
                ('collection', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.collection')),
                ('winning_bid', models.OneToOneField(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='winning_item', to='api.bid')),
            ],
        ),
        migrations.AddField(
            model_name='bid',
            name='item',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.item'),
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=20, primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(choices=[('U', 'User'), ('S', 'Superuser'), ('V', 'Visitor'), ('VIP', 'VIP')], default='V', max_length=3)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('dob', models.DateField(blank=True)),
                ('balance', models.DecimalField(decimal_places=2, max_digits=6)),
                ('shipping_address', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.address')),
                ('card_details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.carddetails')),
                ('paypal_details', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='api.paypaldetails')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_name', models.TextField(max_length=255)),
                ('display_icon', models.URLField(blank=True, max_length=255, null=True)),
                ('average_rating', models.DecimalField(decimal_places=1, max_digits=1)),
                ('slug', models.SlugField(max_length=20, unique=True)),
                ('item_count', models.PositiveIntegerField(default=0)),
                ('account', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='api.account')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='api.profile'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_of_comment', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(max_length=1000)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.item')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.AddField(
            model_name='bid',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile'),
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('ratee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_given', to='api.account')),
                ('rater', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings_received', to='api.account')),
            ],
        ),
        migrations.CreateModel(
            name='Save',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_saved', models.DateTimeField(auto_now_add=True)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.item')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.profile')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('P', 'Pending'), ('C', 'Complete')], default='P', max_length=1)),
                ('bid', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='api.bid')),
                ('buyer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='won', to='api.account')),
                ('seller', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='to_ship', to='api.account')),
            ],
        ),
    ]
